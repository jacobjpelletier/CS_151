


// <><><><><><><><><> HOMEWORK FOUR <><><><><><><><><> 

/*
CS 151: Homework 4

1. Write a class called Phone that uses the StringTokenizer class to identify 
the parts of a phone number. Assume that the format of the phone 
number is (nnn) nnn-nnnn. Example (860) 222-3344. The class should
have at least three public methods: one returning the area code, 
one returning the exchange and one returning the extension.

Write an application class to test the Phone class.

2. Write a class called Triangle that can be used to represent a triangle. 
It should include the following methods that return boolean 
values indicating if the particular property holds:
    -  isRight (a right triangle)
    -  isScalene (no two sides are the same length)
    -  isIsosceles (exactly two sides are the same length)
    -  isEquilateral (all three sides are the same length).

Write an application class to test the triangle class.
*/

// <><><><><><><><><> PROBLEM ONE SOLUTION <><><><><><><><><>

import java.util.*;

public class hwFourProbOne {

  //------------------------------------------------------------------------------------------
  // main method which tests custom class Phone.java
  //------------------------------------------------------------------------------------------
  public static void main(String[] args) {
    
    Phone userNumber; // initialize Phone object

    /* take in user data below */
    Scanner scan = new Scanner(System.in);
    System.out.print("Enter phone number in the format of (555) 555-5555: ");
    String phoneNumber = scan.nextLine();
    System.out.println();

    userNumber = new Phone(phoneNumber); // create new Phone object with user input

    /* return tokenized output as desired */
    System.out.println("Area Code: " + userNumber.getAreaCode());
    System.out.println("Grouping: " + userNumber.getGrouping());
    System.out.println("Line Number: " + userNumber.getLineNumber());

  }
}

class Phone {

  private String number, areaCode, grouping, lineNumber, numberToEval; // private initialization of instance data

  //------------------------------------------------------------------------------------------
  // phone constructor takes in a string argument and stores components as data through tokenization
  // input data is expected as a string in the form (###) ### ####
  // data compentents from tokenization stored as strings
  //------------------------------------------------------------------------------------------
  public Phone(String phoneNumber) {
  
    numberToEval = phoneNumber;

    /* initiaze areaCode, grouping, and lineNumber to argument data */
    StringTokenizer strT = new StringTokenizer(numberToEval, " ");
    areaCode = strT.nextToken();
    grouping = strT.nextToken("-");
    lineNumber = strT.nextToken();

  }

  //------------------------------------------------------------------------------------------
  // getter methods
  //------------------------------------------------------------------------------------------
  public String getAreaCode() {
    return areaCode;
  }

  public String getGrouping() {
    return grouping;
  }

  public String getLineNumber() {
    return lineNumber;
  }
}      

// <><><><><><><><><> PROBLEM ONE OUTPUT <><><><><><><><><>

/*
jacobpelletier desktop $ java hwFourProbOne.java
Enter phone number in the format of (555) 555-5555: (777) 555-8888

Area Code: (777)
Grouping:  555
Line Number: 8888
*/

// <><><><><><><><><> PROBLEM ONE V2 SOLUTION <><><><><><><><><>

import java.util.*;

//------------------------------------------------------------------------------------------
// Rather than using StringTokenizer, split was used in this solution.
// NOTE FROM ORACLE ON tokenizer vs split:
// https://docs.oracle.com/javase/7/docs/api/java/util/StringTokenizer.html
// "StringTokenizer is a legacy class that is retained for compatibility reasons although its use is discouraged in new
// code. It is recommended that anyone seeking this functionality use the split method of String or the java.util.regex
// package instead."
//------------------------------------------------------------------------------------------
public class hwFourProbOneV2 {

    //------------------------------------------------------------------------------------------
    // main method which tests custom class Phone.java
    //------------------------------------------------------------------------------------------
    public static void main(String[] args) {

        Phone userNumber; // initialize Phone object

        /* take in user data below */
        Scanner scan = new Scanner(System.in);
        System.out.print("Enter phone number in the format of (555) 555-5555: ");
        String phoneNumber = scan.nextLine();
        System.out.println();

        userNumber = new Phone(phoneNumber); // create new Phone object with user input

        /* return tokenized output as desired */
        System.out.println("Area Code: " + userNumber.getAreaCode());
        System.out.println("Grouping: " + userNumber.getGrouping());
        System.out.println("Line Number: " + userNumber.getLineNumber());

    }
}

class Phone {

    private String number, areaCode, grouping, lineNumber; // private initialization of instance data

    //------------------------------------------------------------------------------------------
    // phone constructor takes in a string argument and stores components as data using split method
    // input data is expected as a string in the form (###) ### ####
    // data compentents from tokenization stored as strings
    //------------------------------------------------------------------------------------------
    public Phone(String phoneNumber) {

        /* initiaze areaCode, grouping, and lineNumber to argument data */
        String[] numberToEval = phoneNumber.split("\\s|\\-");
        for (int x=0; x<numberToEval.length; x++) {
            switch (x) {
                case 0:
                    areaCode = numberToEval[x];
                    break;
                case 1:
                    grouping = numberToEval[x];
                    break;
                case 2:
                    lineNumber = numberToEval[x];
            }
        }
    }

    //------------------------------------------------------------------------------------------
    // getter methods
    //------------------------------------------------------------------------------------------
    public String getAreaCode() {
        return areaCode;
    }

    public String getGrouping() {
        return grouping;
    }

    public String getLineNumber() {
        return lineNumber;
    }
}

// <><><><><><><><><> PROBLEM ONE V2 OUTPUT <><><><><><><><><>
jacobpelletier desktop $ java hwFourProbOneV2.java
Enter phone number in the format of (555) 555-5555: 555 666-7777

Area Code: 555
Grouping: 666
Line Number: 7777

// <><><><><><><><><> PROBLEM TWO SOLUTION <><><><><><><><><>

//Homework 4 -- The triangle problem: more than just a hint 

import java.util.Scanner;

class Triangle {

    int side1, side2, side3;

    public Triangle() {
        side1 = 0;
        side2 = 0;
        side3 = 0;
    }

    public void getData() {

        Scanner scan = new Scanner(System.in);

        System.out.println("Enter triangle sides in increasing size:");
        System.out.print("    side1 > ");
        System.out.flush();
        side1 = scan.nextInt();

        System.out.print("    side2 > ");
        System.out.flush();
        side2 = scan.nextInt();

        System.out.print("    side3 > ");
        System.out.flush();
        side3 = scan.nextInt();
    }

    public boolean isRight() {
        return ((side1 * side1 + side2 * side2) == (side3 * side3));
    }

    public boolean isScelene() {
        if (side1 != side2) {
            if (side2 != side3) {
                if (side1 != side3) {
                    return true;
                }
                else
                    return false;
            }
            else
                return false;
        }
        else
            return false;
    }

    public boolean isIsosceles() {
        if (side1 == side2)
            if (side1 != side3)
                return true;
            else
                return false;
        else if (side1 == side3)
            if (side1 != side2)
                return true;
            else
                return false;
        else if (side2 == side3)
            if (side2 != side1)
                return true;
            else
                return false;
        else
            return false;
    }

    public boolean isEquilateral() {
        if (side1 == side2 && side1 == side3 && side2 == side3) {
            return true;
        } else
            return false;
    }
}

class TriangleEvaluator {

   public static void main (String[] args) {
 
      Triangle triangle1 = new Triangle();
   
      triangle1.getData();
      if (triangle1.isRight()) {
          System.out.println("triangle1 is right.");
          if (triangle1.isScelene())
              System.out.println("triangle1 is also scelene.");
          else if (triangle1.isIsosceles())
              System.out.println("triangle1 is also iscoceles.");
          else;
      }
      else if (triangle1.isScelene())
         System.out.println ("triangle1 is scelene.");
      else if (triangle1.isIsosceles())
          System.out.println ("triangle1 is iscoceles.");
      else if (triangle1.isEquilateral())
          System.out.println ("triangle1 is equilateral.");
      else
         System.out.println ("Something goes here.");
   }
}

// <><><><><><><><><> PROBLEM TWO SOLUTION <><><><><><><><><>

jacobpelletier desktop $ java TriangleEvaluator
Enter triangle sides in increasing size:
    side1 > 3
    side2 > 4
    side3 > 5
triangle1 is right.
triangle1 is also scelene.
